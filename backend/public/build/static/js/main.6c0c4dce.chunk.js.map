{"version":3,"sources":["logo.svg","services/auth.js","components/auth/LoginForm.js","components/auth/SignUpForm.js","components/auth/LoginContainer.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","axios","defaults","headers","Content-Type","base_url","login","auth","post","concat","then","res","data","catch","error","response","FormItem","Form","Item","LoginForm","handleSubmit","e","console","log","_this","props","preventDefault","form","validateFields","err","values","onLogin","getFieldDecorator","this","_this$props","handleText","react_default","a","createElement","es_form","onSubmit","className","rules","required","message","input","name","onChange","prefix","icon","type","style","color","placeholder","size","es_button","htmlType","borderColor","backgroundColor","react_router_dom","to","Component","Login","create","SignupForm","onRegister","SignUpForm_FormItem","Signup","LoginContainer","state","target","value","setState","info","r","history","push","pathname","location","card","auth_LoginForm","SignUpForm","Routes","react_router","path","component","App","Routes_Routes","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c0c4dce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios'\n\naxios.defaults.headers = {\n    'Content-Type': 'application/json'\n}\n\nconst isProduction = process.env.NODE_ENV === 'production'\nconst base_url = isProduction\n    ? 'https://erphack.herokuapp.com/api'\n    : 'http://localhost:3000/api'\n\n\nexport const login = auth => {\n    return axios\n        .post(`${base_url}/auth/login`, auth)\n        .then(res => res.data)\n        .catch(error => {\n            throw error.response.data\n        })\n}\n\nexport const register = auth => {\n    return axios\n        .post(`${base_url}/auth/register`, auth)\n        .then(res => res.data)\n        .catch(error => {\n            throw error.response.data\n        })\n\n};","import React, { Component } from 'react';\nimport './LogStyles.css';\nimport { Form, Icon, Input, Button, Card } from 'antd';\nimport { Link } from 'react-router-dom'\nimport { login } from '../../services/auth'\nconst FormItem = Form.Item;\n\nclass LoginForm extends Component {\n\n\thandleSubmit = (e) => {\n\t\tconsole.log(this.props.data)\n\t\te.preventDefault();\n\n\t\tthis.props.form.validateFields((err, values) => {\n\t\t\tif (!err) {\n\t\t\t\tthis.props.onLogin()\n\n\t\t\t}\n\t\t});\n\t};\n\n\n\trender() {\n\t\tconst { getFieldDecorator } = this.props.form;\n\t\tconst { handleText, data } = this.props;\n\t\treturn (\n\n\t\t\t<Form onSubmit={this.handleSubmit} className=\"login-form\" >\n\t\t\t\t<FormItem>\n\t\t\t\t\t{getFieldDecorator('email', {\n\t\t\t\t\t\trules: [{ required: true, message: 'Ingresa tú email!' }],\n\t\t\t\t\t})(\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tname={'email'}\n\t\t\t\t\t\t\tonChange={handleText}\n\t\t\t\t\t\t\tprefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\tsize=\"large\" />\n\t\t\t\t\t)}\n\t\t\t\t</FormItem>\n\t\t\t\t<FormItem>\n\t\t\t\t\t{getFieldDecorator('password', {\n\t\t\t\t\t\trules: [{ required: true, message: 'Ingresa tú contraseña!' }],\n\t\t\t\t\t})(\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tname={'password'}\n\t\t\t\t\t\t\tonChange={handleText}\n\t\t\t\t\t\t\tprefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\tsize=\"large\" />\n\t\t\t\t\t)}\n\t\t\t\t</FormItem>\n\t\t\t\t<FormItem>\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button ant-btn-primary\" size=\"large\" style={{ borderColor: '#72c6cd', backgroundColor: '#72c6cd' }}>\n\t\t\t\t\t\tLog in\n                    </Button>\n\t\t\t\t</FormItem>\n\n\t\t\t\t<span>¿No tienes cuenta? Registrate <Link to='/signup'>aqui</Link> </span>\n\t\t\t</Form>\n\t\t);\n\t}\n}\n\nconst Login = Form.create()(LoginForm);\n\nexport default Login;","import React, { Component } from 'react';\nimport './LogStyles.css';\nimport { Form, Icon, Input, Button } from 'antd';\nimport { Link } from 'react-router-dom'\nimport { singup } from '../../services/auth'\nconst FormItem = Form.Item;\n\nclass SignupForm extends Component {\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(\"data:\", this.props.data)\n\t\tthis.props.form.validateFields((err, values) => {\n\t\t\tif (!err) {\n\t\t\t\tthis.props.onRegister()\n\n\n\n\t\t\t}\n\t\t});\n\t};\n\n\n\trender() {\n\t\tconst { getFieldDecorator } = this.props.form;\n\t\tconst { handleText, data, onRegister } = this.props;\n\t\treturn (\n\t\t\t<Form onSubmit={this.handleSubmit} className=\"login-form\" >\n\t\t\t\t<FormItem>\n\t\t\t\t\t{getFieldDecorator('Nombre', {\n\t\t\t\t\t\trules: [{ required: true, message: 'Ingresa tú email!' }],\n\t\t\t\t\t})(\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tname={'firstName'}\n\t\t\t\t\t\t\tonChange={handleText}\n\t\t\t\t\t\t\tprefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n\t\t\t\t\t\t\tplaceholder=\"Nombre\"\n\t\t\t\t\t\t\tsize=\"large\" />\n\t\t\t\t\t)}\n\t\t\t\t</FormItem>\n\t\t\t\t<FormItem>\n\t\t\t\t\t{getFieldDecorator('Apellido Paterno', {\n\t\t\t\t\t\trules: [{ required: true, message: 'Enter your email!' }],\n\t\t\t\t\t})(\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tname={'firstLastName'}\n\t\t\t\t\t\t\tonChange={handleText}\n\t\t\t\t\t\t\tprefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n\t\t\t\t\t\t\tplaceholder=\"Apellido Paterno\"\n\t\t\t\t\t\t\tsize=\"large\" />\n\t\t\t\t\t)}\n\t\t\t\t</FormItem>\n\t\t\t\t<FormItem>\n\t\t\t\t\t{getFieldDecorator('RFC', {\n\t\t\t\t\t\trules: [{ required: true, message: 'Enter your email!' }],\n\t\t\t\t\t})(\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tname={'rfc'}\n\t\t\t\t\t\t\tonChange={handleText}\n\t\t\t\t\t\t\tprefix={<Icon type=\"key\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n\t\t\t\t\t\t\tplaceholder=\"RFC\"\n\t\t\t\t\t\t\tsize=\"large\" />\n\t\t\t\t\t)}\n\t\t\t\t</FormItem>\n\t\t\t\t<FormItem>\n\t\t\t\t\t{getFieldDecorator('email', {\n\t\t\t\t\t\trules: [{ required: true, message: 'Enter your email!' }],\n\t\t\t\t\t})(\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tname={'email'}\n\t\t\t\t\t\t\tonChange={handleText}\n\t\t\t\t\t\t\tprefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\tsize=\"large\" />\n\t\t\t\t\t)}\n\t\t\t\t</FormItem>\n\t\t\t\t<FormItem>\n\t\t\t\t\t{getFieldDecorator('password', {\n\t\t\t\t\t\trules: [{ required: true, message: 'Ingresa tú contraseña!' }],\n\t\t\t\t\t})(\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tname={'password'}\n\t\t\t\t\t\t\tonChange={handleText}\n\t\t\t\t\t\t\tprefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\tsize=\"large\" />\n\t\t\t\t\t)}\n\t\t\t\t</FormItem>\n\t\t\t\t<FormItem>\n\t\t\t\t\t{getFieldDecorator('confirmPassword', {\n\t\t\t\t\t\trules: [{ required: true, message: 'Ingresa tú contraseña!' }],\n\t\t\t\t\t})(\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tname={'confirmPassword'}\n\t\t\t\t\t\t\tonChange={handleText}\n\t\t\t\t\t\t\tprefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\n\t\t\t\t\t\t\tsize=\"large\" />\n\t\t\t\t\t)}\n\t\t\t\t</FormItem>\n\t\t\t\t<FormItem>\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button ant-btn-primary\" size=\"large\" style={{ borderColor: '#72c6cd', backgroundColor: '#72c6cd' }}>\n\t\t\t\t\t\tRegistrate\n                    </Button>\n\t\t\t\t</FormItem>\n\n\t\t\t\t<span>¿Ya tienes cuenta? <Link to='/login'>Inicia sesión</Link> </span>\n\t\t\t</Form>\n\t\t);\n\t}\n}\n\nconst Signup = Form.create()(SignupForm);\n\nexport default Signup;","import React, { Component } from 'react';\nimport Login from './LoginForm';\nimport Signup from './SignUpForm';\nimport { login, register } from '../../services/auth';\n\nimport { Card } from 'antd';\n\nimport { Link } from 'react-router-dom';\nimport { message } from 'antd';\n\nclass LoginContainer extends Component {\n\n\tstate = {\n\t\tdata: {}\n\t};\n\n\thandleText = (e) => {\n\t\tlet {data} = this.state;\n\t\tlet field = e.target.name;\n\t\tdata[field] = e.target.value;\n\t\tthis.setState({ data });\n\n\t};\n\n\n\tonRegister = () => {\n\t\tlet { data } = this.state\n\t\t//singup(data, this.props.history)\n\t\tmessage.info('Registro Exitoso');\n\t\tthis.setState({ data: {} })\n\t}\n\tonLogin = () => {\n\t\tlet { data } = this.state\n\t\tlogin(data).then(r => { \n\t\t\tconsole.log(\"Que es esto\" , r)\n\t\t\tmessage.info('Welcome');\n\t\t\tthis.props.history.push('/home')\n\t\t}).catch(err => {\n\t\t\tconsole.log(\"error\", err)\n\t\t\tmessage.info('OH');\n\t\t})\n\t\t\n\t\tthis.setState({ data: {} })\n\t\tconsole.log(\"Here\", data)\n\t}\n\n\trender() {\n\t\tconst { pathname } = this.props.location\n\t\tlet { data } = this.state;\n\t\treturn (\n\t\t\t<div className=\"login\">\n\t\t\t\t<Card>\n\n\n\t\t\t\t\t<div className=\"header\">\n\n\t\t\t\t\t\t<span className=\"title\">My Numbers</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpathname === '/login' ?\n\n\t\t\t\t\t\t\t\t<Login\n\t\t\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\t\t\tonLogin={this.onLogin}\n\t\t\t\t\t\t\t\t\thandleText={this.handleText}\n\t\t\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t\t\t:\n\n\t\t\t\t\t\t\t\t<Signup handleText={this.handleText} data={data} onRegister={this.onRegister} />\n\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</Card>\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default LoginContainer;\n\n\n\n\n","import React from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport LoginContainer from './components/auth/LoginContainer'\n\nexport const Routes = () =>(\n<Switch>\n    <Route path='/login' component={LoginContainer }  />\n    <Route path='/register' component={LoginContainer }  />\n    <Route path='/home' component={LoginContainer }  />\n</Switch>\n);\n\n\n\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Routes } from './Routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Routes/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css'\n\nimport { BrowserRouter } from 'react-router-dom'\n\nconst WithRouter = () => (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\n\nReactDOM.render(<WithRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}